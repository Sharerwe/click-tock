"['class ex 212108.py', 'passwd_check_cli.py', 'clip_ipL.py', 'News_letter_project', 'Refac_RSA_key_pair_gen.py', 'pick-lock-QTRW-gist_id.txt', 'code_wars_09_03.py', '10_09_test.py', 'Portfolio Porjects', 'rockyou_org.txt', 'auth1.log.gz', 'class_work_11_04.py', 'Class_notes_md', 'RSA_key_pair_gen.py', 're_demo_tkinter.py', 'YahooFin_Project', 'nes_email_2021-10-19.html', 'test6.html', 'file_tree_writer.py', 'class_work_10_2.py', 'test3.html', '10_07_cw.py', 'nes_email_2021-10-16.html', 'tests.py', 'Passwd_Project', 'cclass_work_10_05.py', 'credentials.json', 'nes_email_2021-12-18.html', 'test2.html', 'NetCarpy_org.py', 'nes_email_2021-10-17.html', 'Refac_Game_of_Life.py', 'class_work_09_26.py', 'class_work_09_28.py', 'summarizers_test.py', 'NetCarPy copy.py', 'client_notes.txt', 'test.html', 'astr_pathing_algo.py', 'click-tock-QTRW-gist_id.txt', 'test1.html', 'test5.html', 'class ex 212608.py', 'git_user.txt', 'test4.html', 'Netcar.py', 'text_format.py', 'network_tools', 'exam.txt', 'passwd_gen.py', 'test.txt', 'code_wars_08_31.py', 'rockyou.txt', 'rocking.txt', 'Game_of_Life.py', 'token.json', 'class_work_09_30.py', 'class_project', 'nes_email_2021-10-18.html', 'git_token.txt', 'NetCarpy_no_op_v1.py', 'replit_notes_07.py', 'test_cve.txt', 'git_stuff.txt', '.vscode', 'class_work_09_13.py', 'kivy_project', 'rock_you_cleaner.py', 'class_work_09_21.py', 'nes_email_2021-10-15.html', 'Netcar_pep8.py', 'class ex 212408.py']"